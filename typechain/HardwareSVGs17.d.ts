/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";

interface HardwareSVGs17Interface extends ethers.utils.Interface {
  functions: {
    "hardware_64()": FunctionFragment;
    "hardware_65()": FunctionFragment;
    "hardware_66()": FunctionFragment;
    "hardware_67()": FunctionFragment;
    "hardware_68()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "hardware_64",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hardware_65",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hardware_66",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hardware_67",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hardware_68",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "hardware_64",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hardware_65",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hardware_66",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hardware_67",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hardware_68",
    data: BytesLike
  ): Result;

  events: {};
}

export class HardwareSVGs17 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: HardwareSVGs17Interface;

  functions: {
    hardware_64(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, number, string] & {
          title: string;
          hardwareType: number;
          svgString: string;
        }
      ]
    >;

    hardware_65(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, number, string] & {
          title: string;
          hardwareType: number;
          svgString: string;
        }
      ]
    >;

    hardware_66(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, number, string] & {
          title: string;
          hardwareType: number;
          svgString: string;
        }
      ]
    >;

    hardware_67(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, number, string] & {
          title: string;
          hardwareType: number;
          svgString: string;
        }
      ]
    >;

    hardware_68(
      overrides?: CallOverrides
    ): Promise<
      [
        [string, number, string] & {
          title: string;
          hardwareType: number;
          svgString: string;
        }
      ]
    >;
  };

  hardware_64(
    overrides?: CallOverrides
  ): Promise<
    [string, number, string] & {
      title: string;
      hardwareType: number;
      svgString: string;
    }
  >;

  hardware_65(
    overrides?: CallOverrides
  ): Promise<
    [string, number, string] & {
      title: string;
      hardwareType: number;
      svgString: string;
    }
  >;

  hardware_66(
    overrides?: CallOverrides
  ): Promise<
    [string, number, string] & {
      title: string;
      hardwareType: number;
      svgString: string;
    }
  >;

  hardware_67(
    overrides?: CallOverrides
  ): Promise<
    [string, number, string] & {
      title: string;
      hardwareType: number;
      svgString: string;
    }
  >;

  hardware_68(
    overrides?: CallOverrides
  ): Promise<
    [string, number, string] & {
      title: string;
      hardwareType: number;
      svgString: string;
    }
  >;

  callStatic: {
    hardware_64(
      overrides?: CallOverrides
    ): Promise<
      [string, number, string] & {
        title: string;
        hardwareType: number;
        svgString: string;
      }
    >;

    hardware_65(
      overrides?: CallOverrides
    ): Promise<
      [string, number, string] & {
        title: string;
        hardwareType: number;
        svgString: string;
      }
    >;

    hardware_66(
      overrides?: CallOverrides
    ): Promise<
      [string, number, string] & {
        title: string;
        hardwareType: number;
        svgString: string;
      }
    >;

    hardware_67(
      overrides?: CallOverrides
    ): Promise<
      [string, number, string] & {
        title: string;
        hardwareType: number;
        svgString: string;
      }
    >;

    hardware_68(
      overrides?: CallOverrides
    ): Promise<
      [string, number, string] & {
        title: string;
        hardwareType: number;
        svgString: string;
      }
    >;
  };

  filters: {};

  estimateGas: {
    hardware_64(overrides?: CallOverrides): Promise<BigNumber>;

    hardware_65(overrides?: CallOverrides): Promise<BigNumber>;

    hardware_66(overrides?: CallOverrides): Promise<BigNumber>;

    hardware_67(overrides?: CallOverrides): Promise<BigNumber>;

    hardware_68(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    hardware_64(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hardware_65(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hardware_66(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hardware_67(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hardware_68(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
